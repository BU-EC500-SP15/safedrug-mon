'''
Before running this script, the SparkStreaming App must be running 
on the machine you pick. 

If not, you can begin SparkStreaming by running this in
SparkStreamingApps-M3 from the terminal: sbt "run-main sparkapps.ctakes.Driver"

If SparkStreaming is running, feel free to run this script, 
though check the appropriate directories in SparkStreamingApps-M3

TO DO:
	-change 'drug_name' variable to the drug that instance of SparkStreaming
	is currently collecting Tweets for
	-make sure the credentials are for the database on the machine

'''
import psycopg2			# For connecting to database
import uuid 			# For generating unique ID
import os              	# For running terminal commands
import time             # For Date/time

tweet_txt = 'tweets.txt'
symptom = ""
tweet = ""

while True:
	# Copy the output text file generated from SparkStreaming App
	os.system("cp tweets.txt new_tweets.txt")
	# Delete the output text file generated from SparkStreaming App
	os.system("rm -rf tweets.txt")
	# Run the cTAKES analysis program on the copied textfile
	print "Starting CtakesTermAnalyzer at " + time.strftime("%c")
	os.system("sbt \"run-main sparkapps.ctakes.CtakesTermAnalyzer\"")
	print "Finished CtakesTermAnalyzer at " + time.strftime("%c")
	# Save the outputs to the database
		# Establish Connection with database
	try:
		conn = psycopg2.connect("dbname='django' user='django' host='localhost' password='As4g98HO8J'")
	except:
		print "I am unable to connect to the database"
	cur = conn.cursor()
		# Get data from text file
	with open('DataFile.txt', 'r') as f:
		for line in f:
			tweet = line.split('|$|')[0]		# Get the Tweet
			print tweet
			drug_name = line.split('|$|')[1]	# Get the drug name
			print drug_name
			symptom = line.split('|$|')[2]	# Get the symptom
			print symptom
			symptom = symptom.lower()		# Sanitize symptom
			symptom = symptom.rstrip('\n')	# Get rid of new lines
				# Skip line if the symptom contains the drug name
			if drug_name in symptom:
				print "Skipping because symptom contains drug name " + drug_name
			elif 'rt' in symptom:
				print "Skipping because symptom contains RT"
			else:
				try: 
					bidoof = str(uuid.uuid1())	# Unique ID generated for Database
					cur.execute("""
						INSERT INTO website_drugtweet
						(id, drug, symptom, tweet) 
						VALUES 
						('{}', '{}', '{}', '{}')""".format(bidoof, drug_name, symptom, tweet))
					conn.commit()
				except:
					print "ERROR: Could not insert data for " + line
	# Delete uncessary files
		# Copied Tweet file
	#os.system("rm -rf new_tweets.txt")	
		# DataFile that is generated by CTakesTermAnalyzer
	#os.system("rm -rf DataFile.txt")
	print "Finished " 
	# Repeat the whole process in the given seconds
	time.sleep(10800)